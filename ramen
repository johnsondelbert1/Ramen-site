<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ラーメン 🍜</title>
    <link href="https://cdn.jsdelivr.net/npm/@mdi/font/css/materialdesignicons.min.css" rel="stylesheet">
    <style>
        /* General page styling for the ramen noodle theme */
        body {
            background-color: #f8f0e3; /* Light beige background, like the color of ramen broth */
            font-family: 'Noto Sans', sans-serif, 'Yu Gothic', 'Hiragino Kaku Gothic Pro', sans-serif; /* Japanese-style font */
            color: #3b2f2f; /* Deep brown color, like ramen soup base */
            margin: 0;
            padding: 0;
        }

        /* Main container to hold the ramen-inspired content */
        .container {
            padding: 20px;
            text-align: center; /* Center the content to resemble the cozy feel of ramen shops */
        }

        /* Ramen bowl-like containers for posts */
        .window {
            background-color: #fff4e6; /* A light, creamy color */
            border: 3px solid #f5a623; /* Bright noodle color border */
            margin-bottom: 10px;
            border-radius: 20px; /* Round borders like ramen bowls */
            padding: 15px;
            overflow: hidden;
            box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.1); /* Soft shadow for that cozy ramen shop ambiance */
        }

        /* Header with a ramen bowl title, bold and inviting */
        .window-header {
            background-color: #f5a623; /* Noodle color theme */
            padding: 10px;
            font-weight: bold;
            font-size: 18px;
            color: white;
            border-radius: 15px;
            cursor: pointer;
            margin-bottom: 10px;
        }

        .window-body {
            padding: 10px;
            font-size: 16px;
        }

        /* Styling for ramen-themed posts */
        .photo-post img {
            width: 100%;
            height: auto;
            max-width: 100%;
            object-fit: contain;
            border-radius: 10px;
            margin-bottom: 15px;
            border: 3px solid #f5a623; /* Noodle-colored border around images */
        }

        .quote-post blockquote {
            font-style: italic;
            color: #8b5f42; /* Rich brown like ramen broth */
            border-left: 4px solid #f5a623;
            padding-left: 10px;
            font-size: 14px;
            margin-bottom: 15px;
        }

        .link-post .window-body a {
            color: #f5a623;
            text-decoration: none;
            font-weight: bold;
        }

        /* Floating ramen chopsticks menu */
        .taskbar {
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
            background-color: #f5a623; /* Noodle-colored background */
            color: white;
            padding: 10px 0;
            display: flex;
            align-items: center;
            justify-content: space-between;
            box-shadow: 0 -3px 6px rgba(0, 0, 0, 0.2);
            font-family: 'Noto Sans', sans-serif;
        }

        /* Start button, shaped like a ramen noodle bowl */
        .start-button {
            background-color: #f5a623;
            color: white;
            padding: 8px 20px;
            font-size: 16px;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            font-weight: bold;
            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
        }

        /* Start menu with ramen blog links */
        .start-menu-items {
            display: none;
            position: absolute;
            bottom: 60px;
            left: 10px;
            background-color: #fff4e6;
            border: 2px solid #f5a623;
            border-radius: 10px;
            padding: 15px;
            width: 230px;
            box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);
        }

        .start-menu-items a {
            display: block;
            padding: 10px;
            color: #f5a623;
            text-decoration: none;
            font-size: 16px;
            border-radius: 10px;
        }

        .start-menu-items a:hover {
            background-color: #f5a623;
            color: white;
        }

        /* Taskbar ramen navigation links */
        .taskbar-nav {
            display: flex;
            justify-content: space-evenly;
            flex-grow: 1;
        }

        .taskbar-nav a {
            color: white;
            text-decoration: none;
            padding: 10px;
            font-size: 16px;
            font-weight: bold;
        }

        .taskbar-nav a:hover {
            background-color: #ff833d;
            border-radius: 10px;
        }

        /* Active ramen tab style */
        .nav-item.active {
            font-weight: bold;
            color: #fff4e6; /* Light ramen broth color */
        }
    </style>
</head>

<body>

    <div class="container">
        <!-- Placeholder for Tumblr and Reddit posts -->
        <div id="tumblr-posts" class="posts-container"></div>
        <div id="reddit-posts" class="posts-container hidden"></div>
    </div>

    <!-- Floating ramen-themed Start Menu with blog links -->
    <div class="start-button" onclick="toggleStartMenu()">🍜 ラーメン スタート</div>
    <div class="start-menu-items">
        <a href="javascript:void(0)" onclick="switchTab('tumblr')" class="nav-item active">Ramen Tumblr (ラーメン東京)</a>
        <a href="javascript:void(0)" onclick="switchTab('reddit')" class="nav-item">Ramen Reddit (うどんサブレディット)</a>
        <hr />
        <a href="https://ramen-tokyo.tumblr.com" target="_blank" class="nav-item">Ramen Tokyo (ラーメン東京)</a>
        <a href="https://worldudon.tumblr.com" target="_blank" class="nav-item">World Udon (世界のうどん)</a>
        <a href="https://udonangya.tumblr.com" target="_blank" class="nav-item">Udon Shop (うどん屋さん)</a>
        <a href="https://www.reddit.com/r/udon" target="_blank" class="nav-item">Udon Subreddit (うどんサブレディット)</a>
    </div>

    <!-- Floating taskbar with ramen navigation links -->
    <div class="taskbar">
        <div class="start-button" onclick="toggleStartMenu()">🍜 ラーメン スタート</div>
        <div class="taskbar-nav">
            <a class="nav-item active" data-tab="tumblr" onclick="switchTab('tumblr')">Ramen Tumblr (ラーメン東京)</a>
            <a class="nav-item" data-tab="reddit" onclick="switchTab('reddit')">Ramen Reddit (うどんサブレディット)</a>
        </div>
    </div>

    <script>
        // Toggle start menu visibility
        function toggleStartMenu() {
            const menu = document.querySelector('.start-menu-items');
            menu.style.display = (menu.style.display === 'block') ? 'none' : 'block';
        }

        // Switch between Tumblr and Reddit content
        function switchTab(tab) {
            document.querySelectorAll('.posts-container').forEach(t => t.classList.add('hidden'));
            document.querySelectorAll('.nav-item').forEach(link => link.classList.remove('active'));

            document.getElementById(`${tab}-posts`).classList.remove('hidden');
            document.querySelector(`[data-tab="${tab}"]`).classList.add('active');
        }

        // Fetch Tumblr posts from multiple ramen blogs
        async function fetchTumblrData() {
            const tumblrPosts = document.getElementById('tumblr-posts');
            const blogs = ['ramen-tokyo', 'worldudon', 'udonangya']; // List of ramen blogs to fetch from
            const apiKey = 'ZGuu8GZuo6jmos0wHBgUG4zpfdzehIBSZvXECK3wU788LrjCcN';

            try {
                let allPosts = [];
                
                // Fetch posts from each ramen blog
                for (const blog of blogs) {
                    const response = await fetch(`https://api.tumblr.com/v2/blog/${blog}.tumblr.com/posts?api_key=${apiKey}`);
                    const data = await response.json();
                    const posts = data.response.posts;
                    allPosts = allPosts.concat(posts); // Combine posts from all blogs
                }

                tumblrPosts.innerHTML = '';

                // Display each post in ramen bowl style
                allPosts.forEach(post => {
                    const card = document.createElement('div');
                    const postType = post.type; // Get the post type
                    card.className = `window ${postType}-post`;

                    // Ensure post title is used, if missing use 'Untitled'
                    const postTitle = post.title || '無題'; // Kanji for "Untitled"
                    const postBody = post.body || '';
                    const postLink = post.post_url;
                    const postImage = post.photos && post.photos.length > 0 ? post.photos[0].alt_sizes[0].url : null;

                    // Construct the post content based on the post type
                    let postContent = `
                        <div class="window-header">${postTitle} 🍜</div>
                        <div class="window-body">${postBody}</div>
                        <a href="${postLink}" target="_blank">さらに読む 🍜</a> <!-- Kanji for "Read more" -->
                    `;

                    // Handle different post types and show ramen-themed images
                    if (postType === 'text') {
                        card.classList.add('text-post');
                        if (postImage) {
                            postContent = `
                                <img src="${postImage}" alt="Post image" />
                                ${postContent}
                            `;
                        }
                    } else if (postType === 'photo') {
                        card.classList.add('photo-post');
                        postContent = `<img src="${postImage}" alt="Post image" />${postContent}`;
                    } else if (postType === 'quote') {
                        card.classList.add('quote-post');
                        postContent = `<blockquote>${postBody}</blockquote>${postContent}`;
                    } else if (postType === 'link') {
                        card.classList.add('link-post');
                        postContent = `<div class="window-body"><a href="${postLink}" target="_blank">${postTitle} 🍜</a></div>${postContent}`;
                    }

                    card.innerHTML = postContent;
                    tumblrPosts.appendChild(card);
                });
            } catch (error) {
                tumblrPosts.innerHTML = `<p style="color: red;">ラーメン投稿の読み込みに失敗しました 🍜.</p>`; <!-- Kanji for "Failed to load ramen posts" -->
            }
        }

        // Set Tumblr as the default active tab and fetch ramen-themed posts
        switchTab('tumblr');
        fetchTumblrData(); // Call the function to load the ramen posts
    </script>

</body>

</html>
